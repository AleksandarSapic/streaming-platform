services:
  postgres:
    image: postgres:15-alpine
    container_name: streaming-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - streaming-network

  backend:
    build: ./backend
    container_name: streaming-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - streaming-network

  frontend:
    build: ./frontend
    container_name: streaming-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - streaming-network

networks:
  streaming-network:
    driver: bridge

volumes:
  postgres_data: